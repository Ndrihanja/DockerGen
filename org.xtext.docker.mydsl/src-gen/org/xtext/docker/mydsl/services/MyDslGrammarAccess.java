/*
 * generated by Xtext 2.35.0
 */
package org.xtext.docker.mydsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class MyDslGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class ComposeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.docker.mydsl.MyDsl.Compose");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cComposeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cComposeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cVersionKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cVersionAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cVersionEStringParserRuleCall_3_1_0 = (RuleCall)cVersionAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cServiceKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cServiceAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cServiceServiceParserRuleCall_4_2_0 = (RuleCall)cServiceAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cServiceAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cServiceServiceParserRuleCall_4_3_1_0 = (RuleCall)cServiceAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Compose returns Compose:
		//    {Compose}
		//    'Compose'
		//    '{'
		//        ('version' version=EString)?
		//        ('service' '{' service+=Service ( "," service+=Service)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Compose}
		//'Compose'
		//'{'
		//    ('version' version=EString)?
		//    ('service' '{' service+=Service ( "," service+=Service)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Compose}
		public Action getComposeAction_0() { return cComposeAction_0; }
		
		//'Compose'
		public Keyword getComposeKeyword_1() { return cComposeKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('version' version=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'version'
		public Keyword getVersionKeyword_3_0() { return cVersionKeyword_3_0; }
		
		//version=EString
		public Assignment getVersionAssignment_3_1() { return cVersionAssignment_3_1; }
		
		//EString
		public RuleCall getVersionEStringParserRuleCall_3_1_0() { return cVersionEStringParserRuleCall_3_1_0; }
		
		//('service' '{' service+=Service ( "," service+=Service)* '}' )?
		public Group getGroup_4() { return cGroup_4; }
		
		//'service'
		public Keyword getServiceKeyword_4_0() { return cServiceKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//service+=Service
		public Assignment getServiceAssignment_4_2() { return cServiceAssignment_4_2; }
		
		//Service
		public RuleCall getServiceServiceParserRuleCall_4_2_0() { return cServiceServiceParserRuleCall_4_2_0; }
		
		//( "," service+=Service)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//service+=Service
		public Assignment getServiceAssignment_4_3_1() { return cServiceAssignment_4_3_1; }
		
		//Service
		public RuleCall getServiceServiceParserRuleCall_4_3_1_0() { return cServiceServiceParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.docker.mydsl.MyDsl.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//    STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class ServiceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.docker.mydsl.MyDsl.Service");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cServiceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommandKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cCommandAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cCommandEStringParserRuleCall_3_1_0 = (RuleCall)cCommandAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cDepends_onKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cDepends_onAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final CrossReference cDepends_onServiceCrossReference_4_2_0 = (CrossReference)cDepends_onAssignment_4_2.eContents().get(0);
		private final RuleCall cDepends_onServiceEStringParserRuleCall_4_2_0_1 = (RuleCall)cDepends_onServiceCrossReference_4_2_0.eContents().get(1);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cDepends_onAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final CrossReference cDepends_onServiceCrossReference_4_3_1_0 = (CrossReference)cDepends_onAssignment_4_3_1.eContents().get(0);
		private final RuleCall cDepends_onServiceEStringParserRuleCall_4_3_1_0_1 = (RuleCall)cDepends_onServiceCrossReference_4_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cImageKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cImageAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cImageImageParserRuleCall_6_0 = (RuleCall)cImageAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cPortKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cPortAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cPortPortParserRuleCall_7_2_0 = (RuleCall)cPortAssignment_7_2.eContents().get(0);
		private final Group cGroup_7_3 = (Group)cGroup_7.eContents().get(3);
		private final Keyword cCommaKeyword_7_3_0 = (Keyword)cGroup_7_3.eContents().get(0);
		private final Assignment cPortAssignment_7_3_1 = (Assignment)cGroup_7_3.eContents().get(1);
		private final RuleCall cPortPortParserRuleCall_7_3_1_0 = (RuleCall)cPortAssignment_7_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7_4 = (Keyword)cGroup_7.eContents().get(4);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cVolumeKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Assignment cVolumeAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cVolumeVolumeParserRuleCall_8_2_0 = (RuleCall)cVolumeAssignment_8_2.eContents().get(0);
		private final Group cGroup_8_3 = (Group)cGroup_8.eContents().get(3);
		private final Keyword cCommaKeyword_8_3_0 = (Keyword)cGroup_8_3.eContents().get(0);
		private final Assignment cVolumeAssignment_8_3_1 = (Assignment)cGroup_8_3.eContents().get(1);
		private final RuleCall cVolumeVolumeParserRuleCall_8_3_1_0 = (RuleCall)cVolumeAssignment_8_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8_4 = (Keyword)cGroup_8.eContents().get(4);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cNetworkKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cNetworkAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cNetworkNetworkParserRuleCall_9_2_0 = (RuleCall)cNetworkAssignment_9_2.eContents().get(0);
		private final Group cGroup_9_3 = (Group)cGroup_9.eContents().get(3);
		private final Keyword cCommaKeyword_9_3_0 = (Keyword)cGroup_9_3.eContents().get(0);
		private final Assignment cNetworkAssignment_9_3_1 = (Assignment)cGroup_9_3.eContents().get(1);
		private final RuleCall cNetworkNetworkParserRuleCall_9_3_1_0 = (RuleCall)cNetworkAssignment_9_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9_4 = (Keyword)cGroup_9.eContents().get(4);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cEnvironmentKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Assignment cEnvironmentAssignment_10_2 = (Assignment)cGroup_10.eContents().get(2);
		private final RuleCall cEnvironmentEnvironmentParserRuleCall_10_2_0 = (RuleCall)cEnvironmentAssignment_10_2.eContents().get(0);
		private final Group cGroup_10_3 = (Group)cGroup_10.eContents().get(3);
		private final Keyword cCommaKeyword_10_3_0 = (Keyword)cGroup_10_3.eContents().get(0);
		private final Assignment cEnvironmentAssignment_10_3_1 = (Assignment)cGroup_10_3.eContents().get(1);
		private final RuleCall cEnvironmentEnvironmentParserRuleCall_10_3_1_0 = (RuleCall)cEnvironmentAssignment_10_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10_4 = (Keyword)cGroup_10.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//Service returns Service:
		//    'Service'
		//    name=EString
		//    '{'
		//        ('command' command=EString)?
		//        ('depends_on' '(' depends_on+=[Service|EString] ( "," depends_on+=[Service|EString])* ')' )?
		//        'image' image=Image
		//        ('port' '{' port+=Port ( "," port+=Port)* '}' )?
		//        ('volume' '{' volume+=Volume ( "," volume+=Volume)* '}' )?
		//        ('network' '{' network+=Network ( "," network+=Network)* '}' )?
		//        ('environment' '{' environment+=Environment ( "," environment+=Environment)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Service'
		//name=EString
		//'{'
		//    ('command' command=EString)?
		//    ('depends_on' '(' depends_on+=[Service|EString] ( "," depends_on+=[Service|EString])* ')' )?
		//    'image' image=Image
		//    ('port' '{' port+=Port ( "," port+=Port)* '}' )?
		//    ('volume' '{' volume+=Volume ( "," volume+=Volume)* '}' )?
		//    ('network' '{' network+=Network ( "," network+=Network)* '}' )?
		//    ('environment' '{' environment+=Environment ( "," environment+=Environment)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Service'
		public Keyword getServiceKeyword_0() { return cServiceKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('command' command=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'command'
		public Keyword getCommandKeyword_3_0() { return cCommandKeyword_3_0; }
		
		//command=EString
		public Assignment getCommandAssignment_3_1() { return cCommandAssignment_3_1; }
		
		//EString
		public RuleCall getCommandEStringParserRuleCall_3_1_0() { return cCommandEStringParserRuleCall_3_1_0; }
		
		//('depends_on' '(' depends_on+=[Service|EString] ( "," depends_on+=[Service|EString])* ')' )?
		public Group getGroup_4() { return cGroup_4; }
		
		//'depends_on'
		public Keyword getDepends_onKeyword_4_0() { return cDepends_onKeyword_4_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_4_1() { return cLeftParenthesisKeyword_4_1; }
		
		//depends_on+=[Service|EString]
		public Assignment getDepends_onAssignment_4_2() { return cDepends_onAssignment_4_2; }
		
		//[Service|EString]
		public CrossReference getDepends_onServiceCrossReference_4_2_0() { return cDepends_onServiceCrossReference_4_2_0; }
		
		//EString
		public RuleCall getDepends_onServiceEStringParserRuleCall_4_2_0_1() { return cDepends_onServiceEStringParserRuleCall_4_2_0_1; }
		
		//( "," depends_on+=[Service|EString])*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//depends_on+=[Service|EString]
		public Assignment getDepends_onAssignment_4_3_1() { return cDepends_onAssignment_4_3_1; }
		
		//[Service|EString]
		public CrossReference getDepends_onServiceCrossReference_4_3_1_0() { return cDepends_onServiceCrossReference_4_3_1_0; }
		
		//EString
		public RuleCall getDepends_onServiceEStringParserRuleCall_4_3_1_0_1() { return cDepends_onServiceEStringParserRuleCall_4_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4_4() { return cRightParenthesisKeyword_4_4; }
		
		//'image'
		public Keyword getImageKeyword_5() { return cImageKeyword_5; }
		
		//image=Image
		public Assignment getImageAssignment_6() { return cImageAssignment_6; }
		
		//Image
		public RuleCall getImageImageParserRuleCall_6_0() { return cImageImageParserRuleCall_6_0; }
		
		//('port' '{' port+=Port ( "," port+=Port)* '}' )?
		public Group getGroup_7() { return cGroup_7; }
		
		//'port'
		public Keyword getPortKeyword_7_0() { return cPortKeyword_7_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7_1() { return cLeftCurlyBracketKeyword_7_1; }
		
		//port+=Port
		public Assignment getPortAssignment_7_2() { return cPortAssignment_7_2; }
		
		//Port
		public RuleCall getPortPortParserRuleCall_7_2_0() { return cPortPortParserRuleCall_7_2_0; }
		
		//( "," port+=Port)*
		public Group getGroup_7_3() { return cGroup_7_3; }
		
		//","
		public Keyword getCommaKeyword_7_3_0() { return cCommaKeyword_7_3_0; }
		
		//port+=Port
		public Assignment getPortAssignment_7_3_1() { return cPortAssignment_7_3_1; }
		
		//Port
		public RuleCall getPortPortParserRuleCall_7_3_1_0() { return cPortPortParserRuleCall_7_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7_4() { return cRightCurlyBracketKeyword_7_4; }
		
		//('volume' '{' volume+=Volume ( "," volume+=Volume)* '}' )?
		public Group getGroup_8() { return cGroup_8; }
		
		//'volume'
		public Keyword getVolumeKeyword_8_0() { return cVolumeKeyword_8_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8_1() { return cLeftCurlyBracketKeyword_8_1; }
		
		//volume+=Volume
		public Assignment getVolumeAssignment_8_2() { return cVolumeAssignment_8_2; }
		
		//Volume
		public RuleCall getVolumeVolumeParserRuleCall_8_2_0() { return cVolumeVolumeParserRuleCall_8_2_0; }
		
		//( "," volume+=Volume)*
		public Group getGroup_8_3() { return cGroup_8_3; }
		
		//","
		public Keyword getCommaKeyword_8_3_0() { return cCommaKeyword_8_3_0; }
		
		//volume+=Volume
		public Assignment getVolumeAssignment_8_3_1() { return cVolumeAssignment_8_3_1; }
		
		//Volume
		public RuleCall getVolumeVolumeParserRuleCall_8_3_1_0() { return cVolumeVolumeParserRuleCall_8_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8_4() { return cRightCurlyBracketKeyword_8_4; }
		
		//('network' '{' network+=Network ( "," network+=Network)* '}' )?
		public Group getGroup_9() { return cGroup_9; }
		
		//'network'
		public Keyword getNetworkKeyword_9_0() { return cNetworkKeyword_9_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_9_1() { return cLeftCurlyBracketKeyword_9_1; }
		
		//network+=Network
		public Assignment getNetworkAssignment_9_2() { return cNetworkAssignment_9_2; }
		
		//Network
		public RuleCall getNetworkNetworkParserRuleCall_9_2_0() { return cNetworkNetworkParserRuleCall_9_2_0; }
		
		//( "," network+=Network)*
		public Group getGroup_9_3() { return cGroup_9_3; }
		
		//","
		public Keyword getCommaKeyword_9_3_0() { return cCommaKeyword_9_3_0; }
		
		//network+=Network
		public Assignment getNetworkAssignment_9_3_1() { return cNetworkAssignment_9_3_1; }
		
		//Network
		public RuleCall getNetworkNetworkParserRuleCall_9_3_1_0() { return cNetworkNetworkParserRuleCall_9_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9_4() { return cRightCurlyBracketKeyword_9_4; }
		
		//('environment' '{' environment+=Environment ( "," environment+=Environment)* '}' )?
		public Group getGroup_10() { return cGroup_10; }
		
		//'environment'
		public Keyword getEnvironmentKeyword_10_0() { return cEnvironmentKeyword_10_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_10_1() { return cLeftCurlyBracketKeyword_10_1; }
		
		//environment+=Environment
		public Assignment getEnvironmentAssignment_10_2() { return cEnvironmentAssignment_10_2; }
		
		//Environment
		public RuleCall getEnvironmentEnvironmentParserRuleCall_10_2_0() { return cEnvironmentEnvironmentParserRuleCall_10_2_0; }
		
		//( "," environment+=Environment)*
		public Group getGroup_10_3() { return cGroup_10_3; }
		
		//","
		public Keyword getCommaKeyword_10_3_0() { return cCommaKeyword_10_3_0; }
		
		//environment+=Environment
		public Assignment getEnvironmentAssignment_10_3_1() { return cEnvironmentAssignment_10_3_1; }
		
		//Environment
		public RuleCall getEnvironmentEnvironmentParserRuleCall_10_3_1_0() { return cEnvironmentEnvironmentParserRuleCall_10_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10_4() { return cRightCurlyBracketKeyword_10_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}
	public class ImageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.docker.mydsl.MyDsl.Image");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cImageAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cImageKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTagKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTagAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cTagEStringParserRuleCall_4_1_0 = (RuleCall)cTagAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Image returns Image:
		//    {Image}
		//    'Image'
		//    name=EString
		//    '{'
		//        ('tag' tag=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Image}
		//'Image'
		//name=EString
		//'{'
		//    ('tag' tag=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Image}
		public Action getImageAction_0() { return cImageAction_0; }
		
		//'Image'
		public Keyword getImageKeyword_1() { return cImageKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('tag' tag=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'tag'
		public Keyword getTagKeyword_4_0() { return cTagKeyword_4_0; }
		
		//tag=EString
		public Assignment getTagAssignment_4_1() { return cTagAssignment_4_1; }
		
		//EString
		public RuleCall getTagEStringParserRuleCall_4_1_0() { return cTagEStringParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class PortElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.docker.mydsl.MyDsl.Port");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPortAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPortKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cNumberKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cNumberAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cNumberEIntParserRuleCall_3_1_0 = (RuleCall)cNumberAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cProtocolKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cProtocolAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cProtocolEStringParserRuleCall_4_1_0 = (RuleCall)cProtocolAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Port returns Port:
		//    {Port}
		//    'Port'
		//    '{'
		//        ('number' number=EInt)?
		//        ('protocol' protocol=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Port}
		//'Port'
		//'{'
		//    ('number' number=EInt)?
		//    ('protocol' protocol=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Port}
		public Action getPortAction_0() { return cPortAction_0; }
		
		//'Port'
		public Keyword getPortKeyword_1() { return cPortKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('number' number=EInt)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'number'
		public Keyword getNumberKeyword_3_0() { return cNumberKeyword_3_0; }
		
		//number=EInt
		public Assignment getNumberAssignment_3_1() { return cNumberAssignment_3_1; }
		
		//EInt
		public RuleCall getNumberEIntParserRuleCall_3_1_0() { return cNumberEIntParserRuleCall_3_1_0; }
		
		//('protocol' protocol=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'protocol'
		public Keyword getProtocolKeyword_4_0() { return cProtocolKeyword_4_0; }
		
		//protocol=EString
		public Assignment getProtocolAssignment_4_1() { return cProtocolAssignment_4_1; }
		
		//EString
		public RuleCall getProtocolEStringParserRuleCall_4_1_0() { return cProtocolEStringParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class VolumeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.docker.mydsl.MyDsl.Volume");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cVolumeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cVolumeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cSourceKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cSourceAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cSourceEStringParserRuleCall_3_1_0 = (RuleCall)cSourceAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTargetKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTargetAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cTargetEStringParserRuleCall_4_1_0 = (RuleCall)cTargetAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Volume returns Volume:
		//    {Volume}
		//    'Volume'
		//    '{'
		//        ('source' source=EString)?
		//        ('target' target=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Volume}
		//'Volume'
		//'{'
		//    ('source' source=EString)?
		//    ('target' target=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Volume}
		public Action getVolumeAction_0() { return cVolumeAction_0; }
		
		//'Volume'
		public Keyword getVolumeKeyword_1() { return cVolumeKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('source' source=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'source'
		public Keyword getSourceKeyword_3_0() { return cSourceKeyword_3_0; }
		
		//source=EString
		public Assignment getSourceAssignment_3_1() { return cSourceAssignment_3_1; }
		
		//EString
		public RuleCall getSourceEStringParserRuleCall_3_1_0() { return cSourceEStringParserRuleCall_3_1_0; }
		
		//('target' target=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'target'
		public Keyword getTargetKeyword_4_0() { return cTargetKeyword_4_0; }
		
		//target=EString
		public Assignment getTargetAssignment_4_1() { return cTargetAssignment_4_1; }
		
		//EString
		public RuleCall getTargetEStringParserRuleCall_4_1_0() { return cTargetEStringParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class NetworkElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.docker.mydsl.MyDsl.Network");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cNetworkAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cNetworkKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cDriverKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cDriverAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cDriverEStringParserRuleCall_4_1_0 = (RuleCall)cDriverAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Network returns Network:
		//    {Network}
		//    'Network'
		//    name=EString
		//    '{'
		//        ('driver' driver=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Network}
		//'Network'
		//name=EString
		//'{'
		//    ('driver' driver=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Network}
		public Action getNetworkAction_0() { return cNetworkAction_0; }
		
		//'Network'
		public Keyword getNetworkKeyword_1() { return cNetworkKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('driver' driver=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'driver'
		public Keyword getDriverKeyword_4_0() { return cDriverKeyword_4_0; }
		
		//driver=EString
		public Assignment getDriverAssignment_4_1() { return cDriverAssignment_4_1; }
		
		//EString
		public RuleCall getDriverEStringParserRuleCall_4_1_0() { return cDriverEStringParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class EnvironmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.docker.mydsl.MyDsl.Environment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEnvironmentAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cEnvironmentKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cValueKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cValueAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cValueEStringParserRuleCall_4_1_0 = (RuleCall)cValueAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Environment returns Environment:
		//    {Environment}
		//    'Environment'
		//    name=EString
		//    '{'
		//        ('value' value=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Environment}
		//'Environment'
		//name=EString
		//'{'
		//    ('value' value=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Environment}
		public Action getEnvironmentAction_0() { return cEnvironmentAction_0; }
		
		//'Environment'
		public Keyword getEnvironmentKeyword_1() { return cEnvironmentKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('value' value=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'value'
		public Keyword getValueKeyword_4_0() { return cValueKeyword_4_0; }
		
		//value=EString
		public Assignment getValueAssignment_4_1() { return cValueAssignment_4_1; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_4_1_0() { return cValueEStringParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.docker.mydsl.MyDsl.EInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EInt returns ecore::EInt:
		//    '-'? INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	
	
	private final ComposeElements pCompose;
	private final EStringElements pEString;
	private final ServiceElements pService;
	private final ImageElements pImage;
	private final PortElements pPort;
	private final VolumeElements pVolume;
	private final NetworkElements pNetwork;
	private final EnvironmentElements pEnvironment;
	private final EIntElements pEInt;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MyDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pCompose = new ComposeElements();
		this.pEString = new EStringElements();
		this.pService = new ServiceElements();
		this.pImage = new ImageElements();
		this.pPort = new PortElements();
		this.pVolume = new VolumeElements();
		this.pNetwork = new NetworkElements();
		this.pEnvironment = new EnvironmentElements();
		this.pEInt = new EIntElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.docker.mydsl.MyDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Compose returns Compose:
	//    {Compose}
	//    'Compose'
	//    '{'
	//        ('version' version=EString)?
	//        ('service' '{' service+=Service ( "," service+=Service)* '}' )?
	//    '}';
	public ComposeElements getComposeAccess() {
		return pCompose;
	}
	
	public ParserRule getComposeRule() {
		return getComposeAccess().getRule();
	}
	
	//EString returns ecore::EString:
	//    STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//Service returns Service:
	//    'Service'
	//    name=EString
	//    '{'
	//        ('command' command=EString)?
	//        ('depends_on' '(' depends_on+=[Service|EString] ( "," depends_on+=[Service|EString])* ')' )?
	//        'image' image=Image
	//        ('port' '{' port+=Port ( "," port+=Port)* '}' )?
	//        ('volume' '{' volume+=Volume ( "," volume+=Volume)* '}' )?
	//        ('network' '{' network+=Network ( "," network+=Network)* '}' )?
	//        ('environment' '{' environment+=Environment ( "," environment+=Environment)* '}' )?
	//    '}';
	public ServiceElements getServiceAccess() {
		return pService;
	}
	
	public ParserRule getServiceRule() {
		return getServiceAccess().getRule();
	}
	
	//Image returns Image:
	//    {Image}
	//    'Image'
	//    name=EString
	//    '{'
	//        ('tag' tag=EString)?
	//    '}';
	public ImageElements getImageAccess() {
		return pImage;
	}
	
	public ParserRule getImageRule() {
		return getImageAccess().getRule();
	}
	
	//Port returns Port:
	//    {Port}
	//    'Port'
	//    '{'
	//        ('number' number=EInt)?
	//        ('protocol' protocol=EString)?
	//    '}';
	public PortElements getPortAccess() {
		return pPort;
	}
	
	public ParserRule getPortRule() {
		return getPortAccess().getRule();
	}
	
	//Volume returns Volume:
	//    {Volume}
	//    'Volume'
	//    '{'
	//        ('source' source=EString)?
	//        ('target' target=EString)?
	//    '}';
	public VolumeElements getVolumeAccess() {
		return pVolume;
	}
	
	public ParserRule getVolumeRule() {
		return getVolumeAccess().getRule();
	}
	
	//Network returns Network:
	//    {Network}
	//    'Network'
	//    name=EString
	//    '{'
	//        ('driver' driver=EString)?
	//    '}';
	public NetworkElements getNetworkAccess() {
		return pNetwork;
	}
	
	public ParserRule getNetworkRule() {
		return getNetworkAccess().getRule();
	}
	
	//Environment returns Environment:
	//    {Environment}
	//    'Environment'
	//    name=EString
	//    '{'
	//        ('value' value=EString)?
	//    '}';
	public EnvironmentElements getEnvironmentAccess() {
		return pEnvironment;
	}
	
	public ParserRule getEnvironmentRule() {
		return getEnvironmentAccess().getRule();
	}
	
	//EInt returns ecore::EInt:
	//    '-'? INT;
	public EIntElements getEIntAccess() {
		return pEInt;
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
