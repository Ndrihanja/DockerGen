/*
 * generated by Xtext 2.35.0
 */
package org.xtext.docker.mydsl.formatting2

import com.google.inject.Inject
import dockerCompose.Compose
import dockerCompose.Service
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.xtext.docker.mydsl.services.MyDslGrammarAccess

class MyDslFormatter extends AbstractFormatter2 {
	
	@Inject extension MyDslGrammarAccess

	def dispatch void format(Compose compose, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (service : compose.service) {
			service.format
		}
	}

	def dispatch void format(Service service, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		service.image.format
		for (port : service.port) {
			port.format
		}
		for (volume : service.volume) {
			volume.format
		}
		for (network : service.network) {
			network.format
		}
		for (environment : service.environment) {
			environment.format
		}
	}
	
}
